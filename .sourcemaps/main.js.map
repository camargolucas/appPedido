{"version":3,"sources":["../../src/utilitarios/apiData.ts","../../src/pages/signup/signup.ts","../../src/pages/request/request.ts","../../src/pages/more/more.ts","../../src/pages/stock/stock.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/providers/product-storage/product-storage.ts","../../src/model/Produto.ts","../../src/providers/check-network/check-network.ts","../../src/pages/menu/menu.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/model/ListaProduto.ts","../../src/Rules/rules.ts","../../src/model/CategoriaItem.ts","../../src/providers/user/user.ts","../../src/pages/edit-product/edit-product.ts","../../src/pages/modal-product/modal-product.ts","../../src/app/app.component.ts","../../src/pages/contact/contact.ts","../../src/pages/home/home.ts","../../src/providers/complete-service/complete-service.ts","../../src/providers/product/product.ts","../../src/utilitarios/utilitarios.ts","../../src/model/Usuario.ts","../../src/pages/tabs/tabs.ts","../../src/providers/tab-state/tab-state.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { RequestOptions, Headers } from \"@angular/http\";\n\nexport class ApiData {\n  // Variavel onde vai ser colocada a URL da API\n  readonly API_URL: string;\n\n  readonly requestOptions: any;\n  private headers;\n\n  constructor() {\n\n    // ## URL da API\n    this.API_URL = \"http://apprequestapi.kinghost.net:21093/\";\n     //this.API_URL = \"http://localhost:21093/\"; // TESTE API LOCAL\n\n     // ## Configuração do Header da API\n     // ## Padrão de transição de dados\n    this.headers = new Headers();\n    this.headers.append(\"Accept\", \"application/json\");\n    this.headers.append(\"Content-Type\", \"application/json\");\n    this.headers.append(\"Access-Control-Allow-Origin\", \"*\");\n\n    this.requestOptions = new RequestOptions({ headers: this.headers });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilitarios/apiData.ts","import { TabsPage } from \"./../tabs/tabs\";\nimport { LoginPage } from \"./../login/login\";\nimport { Http } from \"@angular/http\";\nimport { Usuario } from \"./../../model/Usuario\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { FormGroup } from \"@angular/forms\";\nimport { Component, ViewChild } from \"@angular/core\";\nimport {\n  IonicPage,\n  NavController,\n  NavParams,\n  ToastController,\n  MenuController\n} from \"ionic-angular\";\n\nimport { ApiData } from \"../../utilitarios/apiData\";\nimport { UserProvider } from \"../../providers/user/user\";\nimport { extend } from \"@mobiscroll/angular/src/js/core/core\";\nimport { CategoriaItem } from \"../../model/CategoriaItem\";\nimport { ProductStorageProvider } from \"../../providers/product-storage/product-storage\";\n\n/**\n * Generated class for the SignupPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: \"page-signup\",\n  templateUrl: \"signup.html\"\n})\nexport class SignupPage extends UserProvider {\n  // Variavel utilizada para criar um grupo de formulários\n  formSignUp: FormGroup;\n\n  // Objeto do tipo Usuario\n  usuario: Usuario;\n\n  public isButtonVisible = true;\n\n  // Variavel utilizada para habilitar e desabilitar o botao de cadastro\n  public status: boolean = true;\n\n  // Variaveis utilizadas para resgatar o valor do input\n  @ViewChild(\"email\") email;\n  @ViewChild(\"senha\") password;\n  @ViewChild(\"usuario\") user;\n  @ViewChild(\"loja\") loja;\n  @ViewChild(\"login\") login;\n  constructor(\n    http: Http,\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public toast: ToastController,\n    public storage: ProductStorageProvider,\n    public menu:MenuController,\n  ) {\n    super(http);\n    // Instância do objeto Usuario\n    this.usuario = new Usuario();\n    this.usuario.categoriaItem = new CategoriaItem();\n\n    this.setStatus(true);\n  }\n\n  //#################################################\n  // ## Função ativada quando a tela é iniciada #####\n  ngOnInit() {\n    // Validação dos formulários\n    let EMAILPATTERN = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n    this.formSignUp = new FormGroup({\n      email: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(EMAILPATTERN)\n      ]),\n      usuario: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^(?=.*[a-zA-Z])[a-zA-Z0-9_ ]+$\"),\n        Validators.minLength(2),\n        Validators.maxLength(16)\n      ]),\n      login: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^(?=.*[a-zA-Z])[a-zA-Z0-9]+$\"),\n        Validators.minLength(2),\n        Validators.maxLength(16)\n      ]),\n      senha: new FormControl(\"\", [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(16)\n      ]),\n      loja: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[a-zA-Z0-9_]*$\")\n      ])\n    });\n  }\n\n  //############################################################\n  // ## Funçao para inserir o usuario no banco de dados ########\n  insertUser() {\n    // Seto o valor da variavel falso para desabilitar o botao\n    this.setStatus(false);\n\n    // Populo a modal de Usuario com os dados do campo\n    this.usuario.nomeUsuario = this.user.value;\n    this.usuario.senha = this.password.value;\n    this.usuario.loja = this.loja.value;\n    this.usuario.email = this.email.value;\n    this.usuario.apelidoUsuario = this.login.value;\n\n    // ## Chamada da API para inserção no banco de dados\n    this.insert(this.usuario)\n      .toPromise()\n      .then(ret => {\n        var obj = ret.json();\n        let returnCheckEmail = obj[0][\"email\"];\n        let returnCheckLogin = obj[0][\"apelido\"];\n\n        if (returnCheckEmail == \"0\" && returnCheckLogin == \"0\") {\n          this.showToast(\"Cadastrado com sucesso\");\n\n\n          this.loginAuthencation(this.login.value, this.password.value).then(ret => {\n            // ## Redireciono o Usuario para a tela inicial\n            this.navCtrl.push(TabsPage);\n\n            // ## ativo o menu lateral\n            this.menu.enable(true);\n\n            // ## Carrego os dados do Usuario no cache\n            this.storage.insertUser(ret);\n          });\n        } else {\n          this.showToast(\"Já existe um usuário cadastrado\");\n          this.setStatus(true);\n        }\n      })\n\n      .catch(err => {\n        this.setStatus(true);\n        this.showToast(\"Não foi possivel cadastrar !\");\n      });\n  }\n\n  //############################################################\n  // ## Função para mostrar mensagens na tela do Usuário #######\n  private showToast(mensagem: string): void {\n    let toast = this.toast.create({ duration: 3000, position: \"botton\" });\n    toast.setMessage(mensagem);\n    toast.present();\n  }\n\n  //########################################################################################################################\n  // ## Função utilizada para popular a variavel utilizada para habilitar e desabilitar o botão\n  setStatus(status: boolean) {\n    this.status = status;\n  }\n\n  //########################################################################################################################\n  // ## Função utilizada para habiltar e desabilitar o botão de cadastro\n  enableButton() {\n    return this.status;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.ts","import { ModalController, AlertController } from \"ionic-angular\";\nimport { StockPage } from \"./../stock/stock\";\nimport { ListaProduto } from \"./../../model/ListaProduto\";\nimport { ModalProductPage } from \"./../modal-product/modal-product\";\nimport { Component } from \"@angular/core\";\nimport {\n  IonicPage,\n  NavController,\n  NavParams,\n  ToastController\n} from \"ionic-angular\";\nimport { ProductStorageProvider } from \"../../providers/product-storage/product-storage\";\nimport { Produto } from \"../../model/Produto\";\nimport { EditProductPage } from \"../edit-product/edit-product\";\nimport { ProductProvider } from \"../../providers/product/product\";\nimport { Rules } from \"../../Rules/rules\";\nimport { UserProvider } from \"../../providers/user/user\";\n\n/**\n * Generated class for the RequestPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: \"page-request\",\n  templateUrl: \"request.html\"\n})\nexport class RequestPage {\n  // Utilizada para distinguir no cache a qual categoria os dados armazenados pertencem quando armazenada\n  private idCategoria: number;\n  private nomeCategoria: string;\n\n  // Array para carregar os produtos filtrados por TIPO do produto que estão no cache\n  private arrProdutos: ListaProduto[];\n\n  // Array para carregar os produtos filtrados do cache por CATEGORIA que estão no cache\n  private arrRet: ListaProduto[];\n\n  // Variavel utilizada para distinguir o tipo do produto (FRUTA, VERDURA e LEGUME) e setar as abas\n  private tipo = \"\";\n\n  private add: boolean;\n\n  // Variavel utilizada para verificar se pode ou não enviar o pedido e se pode inserir Produtos\n  private send: boolean;\n\n  // Resgata a data do dia\n  public date: string = new Date().toLocaleDateString();\n\n  // Utilizada para armazenar o id do Usuario logado\n  public idUsuario: number;\n\n  constructor(\n    public modal: ModalController,\n    public toast: ToastController,\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public provider: ProductStorageProvider,\n    public alertCtrl: AlertController,\n    public productApi: ProductProvider,\n    public rules: Rules,\n    public userApi: UserProvider\n  ) {\n    // ##########################################################################################\n    // ## Preencho a variavel com o tipo de categoria correspondente ############################\n    this.nomeCategoria = this.rules[\"categorias\"][\"pedido\"][\"categoriaItem\"][\n      \"nomeCategoria\"\n    ];\n    this.idCategoria = this.rules[\"categorias\"][\"pedido\"][\"categoriaItem\"][\n      \"idCategoria\"\n    ];\n\n    // ## Seto como F(Fruta) para iniciar na aba Fruta\n    this.tipo = \"F\";\n  }\n\n  // ################################################\n  // ## Função ativada quando a View é carregada ####\n  async ionViewDidEnter() {\n    // Armazeno o id do Usuario logado na variavel idUsuario\n    await this.provider.get(\"Usuario\").then(value => {\n      this.idUsuario = value[\"idUsuario\"];\n    });\n\n    // ## Verifico se já foi enviado algum pedido do Usuario logado\n    this.verifyRequest(this.idUsuario, this.date);\n\n    // ## Listagem dos produtos conforme seu tipo\n    this.loadData(this.tipo, this.idUsuario);\n  }\n\n  // ##############################################\n  // ## Função ativada quando a aba é trocada #####\n  onSegmentChange(value: any) {\n    // Lista os produtos conforme seu tipo\n    this.loadData(value, this.idUsuario);\n  }\n\n  // ###############################################################\n  // ## Função utilizada para abrir a modal de adicionar Produtos ##\n  addProduct() {\n    // Criação da Modal\n    const myModal = this.modal.create(ModalProductPage, {\n      idCategoria: this.idCategoria,\n      nomeCategoria: this.nomeCategoria\n    });\n\n    // Quando a modal é finalizada é chamado novamente o metodo de listagem com os novos produtos\n    myModal.onDidDismiss(() => {\n      this.loadData(this.tipo, this.idUsuario);\n    });\n    myModal.present();\n  }\n\n  // #######################################################################\n  // ## Utilizada para verificar se há possibilidade de envio do Pedido ####\n  public isAvaibleSend() {\n    return this.send;\n  }\n\n  // ###################################################################################################\n  // ## Função para verificar no bano de dados se aquele usuario já enviou algum pedido no dia #########\n  async verifyRequest(idUser: number, dateNow: string) {\n    let id = idUser;\n    let date = dateNow;\n    let ENVIOS: any;\n\n    let arrUser = {\n      idUsuario: id,\n      data: date\n    };\n\n    // ## Verifico quantos pedidos ja foram lançados no dia atual.\n    await this.userApi.getSentRequest(arrUser).then(result => {\n      ENVIOS = result[0][\"ENVIOS\"];\n\n      // ## Se ainda não enviou nenhum pedido no dia ...\n      if (ENVIOS < this.rules.ENVIOS) {\n        this.send = true;\n      } else {\n        this.send = false;\n      }\n    });\n    return this.send;\n  }\n\n  /* async verifyStock(idUser: number, dateNow: string) {\n    let id = idUser;\n    let date = dateNow;\n    let ENVIOS: any;\n\n    let arrUser = {\n      idUsuario: id,\n      data: date\n    };\n\n    await this.userApi.getSentStock(arrUser).then(result => {\n      ENVIOS = result[0][\"ENVIOS\"];\n\n      if (ENVIOS >= this.rules.ENVIOS) {\n        this.add = true;\n      } else {\n        this.add = false;\n      }\n    });\n\n    return this.add;\n  } */\n\n  // ########################################################################\n  // ## Função que carrega e filtra os dados no cache do Usuario ############\n  loadData(value, idUser) {\n    this.provider\n      .getAll(this.nomeCategoria)\n      .then(results => {\n        // Filtro todos os produtos lancados de todos os tipos pelo usuario logado\n        this.arrRet = results.filter(data => {\n          return data.produto.usuario.idUsuario == idUser;\n        });\n\n        // Filtro os produtos por TIPO e por Usuario\n        this.arrProdutos = results.filter(data => {\n          return (\n            data.produto.nome[\"TIPO\"] == value &&\n            data.produto.usuario.idUsuario == idUser\n          ); // && data.produto.categoriaItem.nomeCategoria == this.nomeCategoria\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  // ###############################################################\n  // ## Função para chamar a pagina de Edição de produtos ##########\n  editProduct(item: ListaProduto) {\n    this.navCtrl.push(EditProductPage, {\n      key: item.key,\n      produto: item.produto,\n      nomeCategoria: this.nomeCategoria\n    });\n  }\n\n  // ######################################################\n  // ## Função para remoção de produtos do Cache ##########\n  removeProduct(item: ListaProduto) {\n    this.provider.remove(item.key).then(() => {\n      let index = this.arrProdutos.indexOf(item);\n      this.arrProdutos.splice(index, 1);\n      this.loadData(this.tipo, this.idUsuario);\n      this.toast\n        .create({\n          message: \"Produto Removido\",\n          duration: 3000,\n          position: \"bottom\"\n        })\n        .present();\n    });\n  }\n\n  // ########################################################################\n  // ## Função que mostra o pop up de confirmacção de Envio #################\n  showConfirm() {\n    const confirm = this.alertCtrl.create({\n      title: \"Deseja finalizar o Pedido?\",\n      message:\n        \"Lembre-se, se voce finalizar o pedido, ele não poderá ser alterado !\",\n      buttons: [\n        {\n          text: \"Cancelar\",\n          handler: () => {}\n        },\n        {\n          text: \"Confirmar\",\n          handler: () => {\n            // Verifico se já foi enviado Pedido deste usuário\n            this.verifyRequest(this.idUsuario, this.date)\n              .then(ret => {\n                // Se for possivel o lancamento, seto a variavel de Send como falsa para impedir o\n                // usuário de enviar o pedido novamente. E insiro no Banco de Dados\n                if (ret == true) {\n                  this.send = false;\n                  this.insertDatabase();\n                } else {\n                  this.toast\n                    .create({\n                      message: \"Pedido já foi enviado hoje !\",\n                      duration: 3000,\n                      position: \"bottom\"\n                    })\n                    .present();\n                }\n              })\n              .catch(() => {\n                this.toast\n                  .create({\n                    message: \"Não foi possivel enviar o estoque !\",\n                    duration: 3000,\n                    position: \"bottom\"\n                  })\n                  .present();\n              });\n          }\n        }\n      ]\n    });\n    confirm.present();\n  }\n\n  // ###############################################################\n  // ## Função para inserir o Pedido no banco de dados ############\n  insertDatabase() {\n    // this.provider.get(\"Usuario\").then(ret => {\n    let idUsuario = this.idUsuario;\n\n    // ## Monto um objeto com os dados de envio do Usuario, e os produtos adicionados\n    let Produtos = {\n      arrProduto: this.arrRet,\n      idUsuario: idUsuario,\n      dataEnvio: this.date\n    };\n\n    // ## Funcao da API que salva os dados no banco\n    this.productApi\n      .insertRequest(Produtos)\n      .toPromise() // Caso tenha inserido com sucesso ...\n      .then(ret => {\n        this.toast\n          .create({\n            message: \"Pedido Enviado com sucesso\",\n            duration: 3000,\n            position: \"bottom\"\n          })\n          .present();\n      });\n\n    // });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/request/request.ts","import { TabsPage } from './../tabs/tabs';\nimport { ProductStorageProvider } from './../../providers/product-storage/product-storage';\nimport { LoginPage } from './../login/login';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ViewController, App } from 'ionic-angular';\n\n/**\n * Generated class for the MorePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-more',\n  templateUrl: 'more.html',\n})\nexport class MorePage {\n  constructor(public navCtrl: NavController, public navParams: NavParams, public provider:ProductStorageProvider\n    ,public viewCtrl:ViewController,public app:App) {\n  }\n\n\n  leave(){\n      // ## Saída do sistema\n      this.app.getRootNav().setRoot(LoginPage);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/more/more.ts","import { TabsPage } from \"./../tabs/tabs\";\nimport { Usuario } from \"./../../model/Usuario\";\nimport { ProductProvider } from \"./../../providers/product/product\";\n\nimport { ProductStorageProvider } from \"./../../providers/product-storage/product-storage\";\nimport { Component, ɵConsole, Optional } from \"@angular/core\";\nimport {\n  IonicPage,\n  NavController,\n  NavParams,\n  ToastController,\n  ModalController,\n  AlertController\n} from \"ionic-angular\";\nimport { EditProductPage } from \"../edit-product/edit-product\";\nimport { ModalProductPage } from \"../modal-product/modal-product\";\nimport { ListaProduto } from \"../../model/ListaProduto\";\nimport { UserProvider } from \"../../providers/user/user\";\nimport { Rules } from \"../../Rules/rules\";\nimport { TabStateProvider } from \"../../providers/tab-state/tab-state\";\n\n/**\n * Generated class for the StockPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: \"page-stock\",\n  templateUrl: \"stock.html\"\n})\nexport class StockPage {\n  // Array para carregar os produtos filtrados do cache por CATEGORIA que estão no cache\n  private arrRet: ListaProduto[];\n\n  // Array para carregar os produtos filtrados por TIPO do produto que estão no cache\n  private arrProdutos: ListaProduto[];\n\n  // Variavel utilizada para distinguir o tipo do produto (FRUTA, VERDURA e LEGUME) e setar as abas\n  private tipo = \"\";\n\n  // Variavel utilizada para verificar se é possivel editar os produtos e enviar o estoque\n  public editar: boolean;\n\n  // Data do dia\n  public date: string = new Date().toLocaleDateString();\n\n  // Utilizada para distinguir no cache a qual categoria os dados armazenados pertencem quando armazenada\n  private idCategoria: number;\n  private nomeCategoria: string;\n\n  // Variavel para popular o id do usuário logado\n  public idUsuario: number;\n\n  // Objeto do Usuario\n  public usuario: Usuario;\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public provider: ProductStorageProvider,\n    public toast: ToastController,\n    public modal: ModalController,\n    public alertCtrl: AlertController,\n    public storage: ProductStorageProvider,\n    public apiProduct: ProductProvider,\n    public userApi: UserProvider,\n    public rules: Rules,\n    public tabState: TabStateProvider\n  ) {\n    // ##########################################################################################\n    // ## Preencho a variavel com o tipo de categoria correspondente ############################\n    this.nomeCategoria = this.rules[\"categorias\"][\"estoque\"][\"categoriaItem\"][\n      \"nomeCategoria\"\n    ];\n    this.idCategoria = this.rules[\"categorias\"][\"estoque\"][\"categoriaItem\"][\n      \"idCategoria\"\n    ];\n\n    // ## Seto como F(Fruta) para iniciar na aba Fruta\n    this.tipo = \"F\";\n    //this.tabState.setState(\"tabRequest\", true)\n  }\n\n  // ################################################\n  // ## Função ativada quando a View é carregada ####\n  async ionViewDidEnter() {\n\n    // Armazeno o id do Usuario logado na variavel idUsuario\n    await this.provider.get(\"Usuario\").then(value => {\n      this.idUsuario = value[\"idUsuario\"];\n    });\n\n    // ## Listagem dos produtos conforme seu tipo\n    this.loadData(this.tipo, this.idUsuario);\n\n    // Verifica a disponibilidade para liberar a aba de Pedido\n    this.verifyToEnableTab();\n  }\n\n  // ##############################################\n  // ## Função ativada quando a aba é trocada #####\n  onSegmentChange(value: any) {\n    // Lista os produtos conforme seu tipo\n    this.loadData(value, this.idUsuario);\n  }\n\n  // ###############################################################\n  // ## Função para chamar a pagina de Edição de produtos ##########\n  editProduct(item: ListaProduto) {\n    this.navCtrl.push(EditProductPage, {\n      key: item.key,\n      produto: item.produto,\n      nomeCategoria: this.nomeCategoria\n    });\n  }\n\n  // ######################################################\n  // ## Função para remoção de produtos do Cache ##########\n  removeProduct(item: ListaProduto) {\n    this.provider.remove(item.key).then(() => {\n      let index = this.arrProdutos.indexOf(item);\n      this.arrProdutos.splice(index, 1);\n      this.loadData(this.tipo, this.idUsuario);\n      this.toast\n        .create({\n          message: \"Produto Removido\",\n          duration: 3000,\n          position: \"bottom\"\n        })\n        .present();\n    });\n  }\n\n  // ########################################################################\n  // ## Função que carrega e filtra os dados no cache do Usuario ############\n  loadData(value, idUser) {\n    this.provider\n      .getAll(this.nomeCategoria)\n      .then(results => {\n\n        // ## Filtro todos os produtos lancados de todos os tipos pelo usuario logado\n        this.arrRet = results.filter(data =>{\n          return (data.produto.usuario.idUsuario == idUser)\n        });\n\n        // Filtro os produtos por TIPO e por Usuario\n        this.arrProdutos = results.filter(data => {\n          // Listo pelo tipo do produto e pelo usuario que adicionou o produto\n          return (data.produto.nome[\"TIPO\"] == value && data.produto.usuario.idUsuario == idUser); //&& data.produto.categoriaItem.nomeCategoria == this.nomeCategoria\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  // ###############################################################\n  // ## Função utilizada para abrir a modal de adicionar Produtos ##\n  addProduct() {\n    const myModal = this.modal.create(ModalProductPage, {\n      tipoProduto: this.tipo,\n      idCategoria: this.idCategoria,\n      nomeCategoria: this.nomeCategoria\n    });\n\n    myModal.onDidDismiss(() => {\n      this.loadData(this.tipo, this.idUsuario);\n    });\n    myModal.present();\n  }\n  // ################################################################################################\n  // ## Função utilizada para verificar a disponibilidade de alteração e envio de Produtos ##########\n  public isAvaible() {\n    return this.editar;\n  }\n\n  // ######################################################################\n  // ## Função utilizada para habilitar e desabilitar abas de navegação ###\n  public enableTab(tab: string, status: boolean) {\n    this.tabState.setState(tab, status);\n  }\n  // #################################################################################\n  // ## Função para verificar a disponibilidade de liberação das abas de navegação ###\n  async verifyToEnableTab() {\n    await this.verifyStock().then(ret => {\n      if (ret == true) {\n        this.enableTab(\"tabRequest\", false);\n      } else this.enableTab(\"tabRequest\", true);\n    });\n  }\n\n  // ###############################################################\n  // ## Verifica se foi lancado estoque e retorna um boolean dizendo se pode ou não enviar/editar os produots\n  async verifyStock() {\n    let id = this.idUsuario;\n    let date = this.date;\n    let ENVIOS: any;\n    let tabEnabled: boolean;\n\n    let arrUser = {\n      idUsuario: id,\n      data: date\n    };\n\n    // ## Chamada da API para verificar quantos pedidos foram enviados no dia\n    await this.userApi.getSentStock(arrUser).then(result => {\n      ENVIOS = result[0][\"ENVIOS\"];\n\n      if (ENVIOS < this.rules.ENVIOS) {\n        this.editar = true;\n      } else {\n        this.editar = false;\n      }\n    });\n\n    return this.editar;\n  }\n\n  // ###############################################################\n  // ## Função para inserir o Estoque no banco de dados\n  public insertDataBase() {\n    let idUsuario = this.idUsuario;\n    let dataEnvio = this.date;\n\n     // ## Monto um objeto com os dados de envio do Usuario, e os produtos adicionados\n    let Produtos = {\n      arrProduto: this.arrRet,\n      idUsuario: idUsuario,\n      dataEnvio: dataEnvio\n    };\n\n     // ## Funcao da API que salva os dados no banco\n    this.apiProduct\n      .insert(Produtos)\n      .toPromise() // Caso tenha inserido com sucesso ...\n      .then(ret => {\n        this.toast\n          .create({\n            message: \"Estoque Enviado com sucesso\",\n            duration: 3000,\n            position: \"bottom\"\n          })\n          .present();\n      });\n\n    this.enableTab(\"tabRequest\", true); // Ao inserir o estoque, libera a aba de Pedido\n  }\n\n  // ########################################################################\n  // ## Função que mostra o pop up de confirmacção de Envio #################\n  showConfirm() {\n    const confirm = this.alertCtrl.create({\n      title: \"Deseja enviar o estoque? \",\n      message: \"Lembre-se se voce enviar, o estoque não poderá ser alterado\",\n      buttons: [\n        {\n          text: \"Não\",\n          handler: () => {}\n        },\n        {\n          text: \"Sim\",\n          handler: () => {\n\n            // Verifico se já foi enviado Estoque deste usuário\n            this.verifyStock()\n            .then(ret => {\n              // Se for possivel o lancamento, seto a variavel de Editar como falsa para impedir o\n              // usuário de enviar o pedido novamente. E insiro no Banco de Dados\n              if (ret == true) {\n                this.editar = false;\n                this.insertDataBase();\n              } else {\n                this.toast\n                  .create({\n                    message: \"Estoque já foi enviado hoje !\",\n                    duration: 3000,\n                    position: \"bottom\"\n                  })\n                  .present();\n              }\n            })\n            .catch(()=>{\n              this.toast\n                  .create({\n                    message: \"Não foi possivel enviar o estoque !\",\n                    duration: 3000,\n                    position: \"bottom\"\n                  })\n                  .present();\n            });\n          }\n        }\n      ]\n    });\n    confirm.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/stock/stock.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 178;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 178\n// module chunks = 8","var map = {\n\t\"../pages/edit-product/edit-product.module\": [\n\t\t701,\n\t\t7\n\t],\n\t\"../pages/login/login.module\": [\n\t\t702,\n\t\t6\n\t],\n\t\"../pages/menu/menu.module\": [\n\t\t703,\n\t\t5\n\t],\n\t\"../pages/modal-product/modal-product.module\": [\n\t\t704,\n\t\t4\n\t],\n\t\"../pages/more/more.module\": [\n\t\t705,\n\t\t3\n\t],\n\t\"../pages/request/request.module\": [\n\t\t707,\n\t\t2\n\t],\n\t\"../pages/signup/signup.module\": [\n\t\t706,\n\t\t1\n\t],\n\t\"../pages/stock/stock.module\": [\n\t\t708,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 223;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 223\n// module chunks = 8","import { CategoriaItem } from \"./../../model/CategoriaItem\";\nimport { DatePipe } from \"@angular/common\";\nimport { Injectable } from \"@angular/core\";\nimport \"rxjs/add/operator/map\";\nimport { Storage } from \"@ionic/storage\";\nimport localForage from \"localforage\";\nimport { Produto } from \"../../model/Produto\";\nimport { ListaProduto } from \"../../model/ListaProduto\";\nimport { Usuario } from \"../../model/Usuario\";\nimport { ProductProvider } from \"../product/product\";\nimport { Rules } from \"../../Rules/rules\";\n\n@Injectable()\nexport class ProductStorageProvider {\n  categoria: CategoriaItem;\n  constructor(\n    private storage: Storage,\n    private datePipe: DatePipe,\n    public produtoProv: ProductProvider,\n    public rules: Rules\n  ) {\n    // Instância\n    this.categoria = new CategoriaItem();\n  }\n\n  // ######################################################\n  // ## Função de chamada para a função de inserção #######\n  public insert(produto: any) {\n\n    // ## Geração da key, feita com a data hora minuto e segundo\n    let key = this.datePipe.transform(new Date(), \"ddMMyyyyHHmmss\");\n    return this.save(key, produto);\n  }\n  // ######################################################\n  // ## Função que insere produtos no storage/cache #######\n  public save(key: string, produto: Produto) {\n    return this.storage.set(key, produto);\n  }\n\n  // ###################################\n  // ## Remoção de produtos do cache ###\n  public remove(key: string) {\n    return this.storage.remove(key);\n  }\n\n  // ####################################\n  // Atualização dos dados ##############\n  public update(key: string, produto: Produto) {\n    return this.save(key, produto);\n  }\n\n  // ##########################################\n  // ## Resgata um objeto pela chave(key) #####\n  public get(key: string) {\n    return this.storage.get(key);\n  }\n\n  // #######################################\n  // Função que limpa todo o Storage #######\n  public clear() {\n    return this.storage.clear();\n  }\n\n  // ##################################################\n  // Função que chama a inserção de dados do usuario ##\n  public insertUser(user: any) {\n    console.log(user)\n    // Só é aceito um objeto Usuario armazenado no cache\n    let key = \"Usuario\";\n    return this.saveUser(key, user);\n  }\n\n  // #####################################################\n  // ## Função que insere os dados do usuario no cache ###\n  public saveUser(key: string, user: Usuario) {\n    return this.storage.set(key, user);\n  }\n  // #############################################################################\n  // ## Carrega todos os dados da categoria passada por parâmentro ##############\n  public getAll(categoria: string) {\n    let produtos: ListaProduto[] = [];\n    let arrProduto: ListaProduto[] = [];\n\n    return this.storage\n      .forEach((value: Produto, key: string, iterationNumber: Number) => {\n        let produto = new ListaProduto();\n        produto.key = key;\n        produto.produto = value;\n        produtos.push(produto);\n      })\n\n      .then(() => {\n        // ## Filtro dos produto pela categoria passada no parametro\n        arrProduto = produtos.filter(value => {\n          return value.produto.categoriaItem.nomeCategoria === categoria;\n        });\n\n        return Promise.resolve(arrProduto);\n      })\n      .catch(error => {\n        return Promise.reject(arrProduto);\n      });\n  }\n\n  // ############################################################\n  // ## Insere no cache todos os Produtos do Banco de Dados #####\n  public insertDatabaseProducts() {\n    this.produtoProv.getAllProducts().then(products => {\n      let key = \"ProductsDb\";\n\n      // ## Seto o tipo da categoria do produto\n      this.categoria.idCategoria = this.rules[\"categorias\"][\"productsDb\"][\n        \"categoriaItem\"\n      ][\"idCategoria\"];\n      this.categoria.nomeCategoria = this.rules[\"categorias\"][\"productsDb\"][\n        \"categoriaItem\"\n      ][\"nomeCategoria\"];\n\n      // Objeto com os dados do Produto e a Categoria do Objeto\n      let arrProdutos = {\n        categoriaItem: this.categoria,\n        Produtos: products\n      };\n\n      // Chamada para salvar no cache\n      return this.saveProductsDataBase(key, arrProdutos);\n    });\n  }\n\n  // ###################################################\n  // ## Método para salvar os dados no cache ###########\n  public saveProductsDataBase(key: string, products: any) {\n    return this.storage.set(key, products);\n  }\n}\n\n/* export class Produto{\n  id:number\n  nome:string\n  qtd:number\n  unidade:string\n  tipo:string\n}\n\nexport class ListaProduto{\n  key:string\n  produto:Produto\n}\n */\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/product-storage/product-storage.ts","\nimport { CategoriaItem } from './CategoriaItem';\nimport { Usuario } from './Usuario';\nexport class Produto {\n  id:number\n  nome:string\n  qtd:number\n  unidade:string\n  tipo:string\n  categoriaItem:CategoriaItem\n  usuario:Usuario\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/model/Produto.ts","import { AlertController, Platform } from \"ionic-angular\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Network } from \"@ionic-native/network/ngx\";\r\n\r\n@Injectable()\r\nexport class CheckNetworkProvider {\r\n  constructor(\r\n    public network: Network,\r\n    public alertCtrl: AlertController,\r\n    public platform: Platform\r\n  ) {}\r\n\r\n  //##################################################################\r\n  // ## Função para verificar a conexão de internet do Usuário #######\r\n  checkNetwork() {\r\n    let connected = this.network.onConnect;\r\n\r\n    if (!connected) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/check-network/check-network.ts","import { TabsPage } from './../tabs/tabs';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, Nav } from 'ionic-angular';\r\n\r\n/**\r\n * Generated class for the MenuPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-menu',\r\n  templateUrl: 'menu.html',\r\n})\r\nexport class MenuPage {\r\n  @ViewChild(Nav) nav: Nav;\r\n  pages: Array<{title:string, component:string, openTab?:any}>;\r\n  rootPage = '';\r\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\r\n  this.pages = [\r\n    { title: 'Tab 1', component: 'TabsPage', openTab: 'Tab1Page' },\r\n    { title: 'Tab 2', component: 'TabsPage', openTab: 'Tab2Page' },\r\n    { title: 'Special', component: 'SpecialPage', openTab: 'shuffle' },\r\n  ];\r\n\r\n  }\r\n\r\n  openPage(page){\r\n    this.nav.setRoot(page.component, {openTab: page.openTab})\r\n  }\r\n\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad MenuPage');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/menu/menu.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { MenuPage } from './../pages/menu/menu';\r\nimport { RequestPage } from './../pages/request/request';\r\nimport { StockPage } from './../pages/stock/stock';\r\nimport { Utilitarios } from './../utilitarios/utilitarios';\r\nimport { ModalProductPage } from './../pages/modal-product/modal-product';\r\nimport { MbscModule } from '@mobiscroll/angular';\r\nimport { EditProductPage } from './../pages/edit-product/edit-product';\r\nimport { NgModule, ErrorHandler, LOCALE_ID } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\r\nimport { MyApp } from './app.component';\r\nimport { ContactPage } from '../pages/contact/contact';\r\nimport { HomePage } from '../pages/home/home';\r\nimport { TabsPage } from '../pages/tabs/tabs';\r\nimport { DatePipe } from '@angular/common';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { ProductStorageProvider } from '../providers/product-storage/product-storage';\r\nimport { IonicStorageModule } from '@ionic/storage';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { AutoCompleteModule } from 'ionic2-auto-complete';\r\nimport { CompleteServiceProvider } from '../providers/complete-service/complete-service';\r\nimport { HttpModule } from '@angular/http';\r\nimport { LoginPage } from '../pages/login/login';\r\nimport { SignupPage } from '../pages/signup/signup';\r\nimport { MorePage } from '../pages/more/more';\r\n/* import { AngularFireModule } from 'angularfire2';\r\nimport { AngularFireAuthModule } from 'angularfire2/auth'; */\r\nimport { UserProvider } from '../providers/user/user';\r\nimport { ProductProvider } from '../providers/product/product';\r\nimport { Network } from '@ionic-native/network/ngx';\r\nimport { CheckNetworkProvider } from '../providers/check-network/check-network';\r\nimport { Rules } from '../Rules/rules';\r\nimport { TabStateProvider } from '../providers/tab-state/tab-state';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    ContactPage,\r\n    HomePage,\r\n    TabsPage,\r\n    EditProductPage,\r\n    ModalProductPage,\r\n    LoginPage,\r\n    SignupPage,\r\n    MorePage,\r\n    StockPage,\r\n    RequestPage,\r\n    MenuPage\r\n\r\n  ],\r\n  imports: [\r\n    MbscModule,\r\n    BrowserModule,\r\n    IonicModule.forRoot(MyApp),\r\n    IonicStorageModule.forRoot(),\r\n    FormsModule,\r\n    AutoCompleteModule,\r\n    HttpModule\r\n\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    ContactPage,\r\n    HomePage,\r\n    TabsPage,\r\n    EditProductPage,\r\n    ModalProductPage,\r\n    LoginPage,\r\n    SignupPage,\r\n    MorePage,\r\n    StockPage,\r\n    RequestPage,\r\n    MenuPage\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    Network,\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\r\n    DatePipe,\r\n    ProductStorageProvider,\r\n    CompleteServiceProvider,\r\n    Utilitarios,\r\n    Rules,\r\n    UserProvider,\r\n    ProductProvider,\r\n    CheckNetworkProvider,\r\n    TabStateProvider,\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Produto } from \"./Produto\";\r\n\r\nexport class ListaProduto{\r\n  key:string\r\n  produto:Produto\r\n}\r\n\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/model/ListaProduto.ts","import { CategoriaItem } from \"../model/CategoriaItem\";\r\n\r\n\r\n// Classe utilizada para setar constantes de Regra de Negocio.\r\n\r\n\r\nexport class Rules {\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////\r\n  // CATEGORIA DOS OBJETOS DECLARADOS NO SISTEMA, TODOS DEVEM SER DO TIPO: CATEGORIA ITEM\r\n  //////////////////////////////////////////////////////////////////////////////////////////\r\n private categoriaItem: CategoriaItem;\r\n readonly categorias = {\r\n    estoque: {\r\n      categoriaItem: {\r\n        idCategoria: 1,\r\n        nomeCategoria: \"Estoque\"\r\n      }\r\n    },\r\n    pedido: {\r\n      categoriaItem: {\r\n        idCategoria: 2,\r\n        nomeCategoria: \"Pedido\"\r\n      }\r\n    },\r\n    usuario: {\r\n      categoriaItem: {\r\n        idCategoria: 3,\r\n        nomeCategoria: \"Usuario\"\r\n      }\r\n    },\r\n    productsDb: {\r\n      categoriaItem: {\r\n        idCategoria: 4,\r\n        nomeCategoria: \"ProductsDb\"\r\n      }\r\n    }\r\n  };\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////\r\n/// VARIAVEIS PARA CONTROLE DE ENVIO DE PEDIDOS E ESTOQUE //////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////\r\nreadonly ENVIOS:number = 1; //Padrão de envio por Usuario per dia\r\n////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Rules/rules.ts","export class CategoriaItem{\r\n  idCategoria:number;\r\n  nomeCategoria:string;\r\n}\r\n\r\n//idCategoria 1 = 'Estoque'\r\n//idCategoria 2 = 'Pedido'\r\n//idCategoria 3 = 'Usuario'\r\n//idCategoria 4 = 'ProdutosDb'\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/model/CategoriaItem.ts","import { Injectable, ɵisPromise } from \"@angular/core\";\nimport { Http, RequestOptions, Headers } from \"@angular/http\";\nimport { ApiData } from \"./../../utilitarios/apiData\";\nimport { Usuario } from \"../../model/Usuario\";\nimport { ProductStorageProvider } from \"../product-storage/product-storage\";\nimport { storage } from \"firebase\";\nimport { CategoriaItem } from \"../../model/CategoriaItem\";\nimport { Rules } from \"../../Rules/rules\";\n\n/*\n  Generated class for the UserProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class UserProvider extends ApiData {\n  usuario: Usuario;\n  private nomeCategoria: string;\n  private idCategoria: number;\n  private rules:Rules\n\n  constructor(public http: Http) {\n    super();\n\n    this.rules = new Rules()\n    this.usuario = new Usuario();\n    this.usuario.categoriaItem = new CategoriaItem();\n\n    this.nomeCategoria = this.rules[\"categorias\"][\"usuario\"][\"categoriaItem\"][\n      \"nomeCategoria\"\n    ];\n    this.idCategoria = this.rules[\"categorias\"][\"usuario\"][\"categoriaItem\"][\n      \"idCategoria\"\n    ];\n  }\n\n  // ######################################################\n  // ## Insere o usuario no banco de dado  ################\n  insert(usuario: Usuario) {\n    // Objeto usuario transformado em string para ser enviado na URL\n    let usuarioData = JSON.stringify(usuario);\n\n    return this.http.post(\n      this.API_URL + \"users/insert/\" + encodeURIComponent(usuarioData) + \"\",\n      this.requestOptions\n    );\n  }\n\n  // ###################################################################\n  // ## Resgata os dados do usuario que está logando no sistema ########\n  public getUser(usuario: any) {\n    let usuarioData = JSON.stringify(usuario);\n\n    return new Promise((resolve, reject) => {\n      this.http\n        .get(this.API_URL + \"users/get/\" + encodeURIComponent(usuarioData))\n        .subscribe(\n          result => {\n            resolve(result.json());\n          },\n          error => {\n            reject(error.json);\n          }\n        );\n    });\n  }\n\n  getByName(usuario: Usuario) {\n    let usuarioData = JSON.stringify(usuario);\n    this.http.get(this.API_URL + \"users/getByName/\" + usuarioData + \"\");\n  }\n\n  // ############################################\n  // ## Resgata o estoque enviado  #########\n  getSentStock(data: any) {\n    let strData = JSON.stringify(data);\n\n    return new Promise((resolve, reject) => {\n      this.http\n        .get(\n          this.API_URL +\n            \"users/getSentStock/\" +\n            encodeURIComponent(strData) +\n            \"\"\n        )\n        .subscribe(\n          result => {\n            resolve(result.json());\n          },\n          error => {\n            console.log(error.json());\n          }\n        );\n    });\n  }\n\n  // ############################################\n  // ## Resgata os pedidos eviados  #############\n  getSentRequest(data: any) {\n    let strData = JSON.stringify(data);\n\n    return new Promise((resolve, reject) => {\n      this.http\n        .get(\n          this.API_URL +\n            \"users/getSentRequest/\" +\n            encodeURIComponent(strData) +\n            \"\"\n        )\n        .subscribe(\n          result => {\n            resolve(result.json());\n          },\n          error => {\n            console.log(error.json());\n          }\n        );\n    });\n  }\n\n  loginAuthencation(login, password) {\n\n    // ## Objeto com os dados do usuário que está acessando o app\n    let arrUser = {\n      login: login,\n      password: password\n    };\n\n    // ## função que resgata os dados do usuario no banco\n    return this.getUser(arrUser).then(ret => {\n      if (ret == \"\") {\n        return ret\n      } else {\n        // Se não estiver vazio ele popula a model com os dados resgatados no banco\n       return this.populateUserModel(ret)\n      }\n    });\n  }\n\n  populateUserModel(ret) {\n\n    // ## populo a model com os dados do Usuário\n    this.usuario.nomeUsuario = ret[0][\"nomeUsuario\"];\n    this.usuario.loja = ret[0][\"loja\"];\n    this.usuario.email = ret[0][\"email\"];\n    this.usuario.idCargo = ret[0][\"idCargo\"];\n    this.usuario.idUsuario = ret[0][\"idUsuario\"];\n    this.usuario.apelidoUsuario = ret[0][\"apelidoUsuario\"];\n    this.usuario.categoriaItem.idCategoria = this.idCategoria;\n    this.usuario.categoriaItem.nomeCategoria = this.nomeCategoria;\n\n    return this.usuario\n  }\n\n  /*  insert(usuario: Usuario) {\n    const strUsuario = JSON.stringify(usuario);\n    let URL_API = URL + \"/users/insert/\" + encodeURIComponent(strUsuario) + \"\";\n    this.http.post(URL_API +  'insert/' + strUsuario + '', {\"title\": \"something\"} , this.requestOptions)\n    .subscribe(data => {\n      console.log(data['_body']);\n     }, error => {\n      console.log(error);\n    });\n  } */\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user/user.ts","import { CompleteServiceProvider } from \"./../../providers/complete-service/complete-service\";\nimport { ProductStorageProvider } from \"./../../providers/product-storage/product-storage\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  IonicPage,\n  NavController,\n  NavParams,\n  ToastController,\n  FabButton,\n  ViewController\n} from \"ionic-angular\";\nimport {\n  FormGroup,\n  Validators,\n  FormControl,\n  FormBuilder\n} from \"@angular/forms\";\nimport { modelGroupProvider } from \"@angular/forms/src/directives/ng_model_group\";\nimport { Utilitarios } from \"../../utilitarios/utilitarios\";\nimport { AutoCompleteComponent } from \"ionic2-auto-complete\";\nimport { THIS_EXPR } from \"@angular/compiler/src/output/output_ast\";\nimport { Produto } from \"../../model/Produto\";\n\n@IonicPage()\n@Component({\n  selector: \"page-edit-product\",\n  templateUrl: \"edit-product.html\"\n})\nexport class EditProductPage {\n  @ViewChild(\"searchbar\")\n  searchbar: AutoCompleteComponent;\n\n  private model: Produto;\n  private key: string;\n  private myForm: FormGroup;\n  private arrUnidade: any;\n  private arrTipo: any;\n  private products: any;\n  private nomeProd = \"\";\n  private nomeCategoria = \"\";\n  private classCssImg: string;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public storage: ProductStorageProvider,\n    public toast: ToastController,\n    public completeService: CompleteServiceProvider,\n    public utilitarios: Utilitarios,\n    public view: ViewController\n  ) {\n    // ################################################################################################\n    // ## Verifico se existem dados vindo de outra tela, caso sim ele carrega duas variaveis com os\n    // ## dados da outra tela, caso não tenha dado, instancio um novo objeto para abrir uma tela vazia\n    if (this.navParams.data.produto && this.navParams.data.key) {\n      this.model = this.navParams.data.produto;\n      this.key = this.navParams.data.key;\n    } else {\n      this.model = new Produto();\n    }\n\n    // ###################################################################\n    // ## Carrego o array de Tipo da Fruta para ser utilizado no combobox\n    this.arrTipo = this.utilitarios.getArrayTipo();\n    // ## Carrego o array do tipo Unidade de medida ###\n    this.arrUnidade = this.utilitarios.getArrayUnidade();\n    // ## Populo a variavel nomeProd com o valor que esta no campo nome\n    this.nomeProd = this.model.nome;\n\n    // ###############################################################################################\n    // ## Verifico em qual tela ele esta querendo editar para colocar a imagem de fundo correspondente ;\n    this.nomeCategoria = navParams.data.nomeCategoria;\n    if (this.nomeCategoria === \"Estoque\")\n      this.classCssImg = \"Estoque-Background\";\n    else this.classCssImg = \"Pedido-Background\";\n  }\n\n  // ################################################\n  // ## Método é chamado quando a View é carregada ##\n  ionViewDidLoad() {\n    // ## Método para troca a imagem de fundo do APP\n    this.changeBackground();\n  }\n\n  // ## Método para troca a imagem de fundo do APP\n  changeBackground() {\n    document.getElementById(\"content\").className = this.classCssImg;\n  }\n\n  // ## Método ativado quando a tela é aberta e carrega o formulário com as validações\n  ngOnInit(): void {\n    this.myForm = new FormGroup({\n      qtd: new FormControl(\"\", Validators.required),\n      products: new FormControl(\"\", Validators.required),\n      //   tipo: new FormControl('',Validators.required),\n      und: new FormControl(\"\", Validators.required)\n    });\n    this.searchbar.setFocus();\n  }\n\n  // ##############################################################\n  // ## Método que chama a função que salva o produto no cache ####\n  save() {\n    if (this.model.qtd > 0) {\n      this.saveProduct()\n        .then(() => {\n          this.toast\n            .create({\n              message: \"Produto Salvo\",\n              duration: 2000,\n              position: \"botton\"\n            })\n            .present();\n          this.navCtrl.pop();\n        })\n        .catch(() => {\n          this.toast\n            .create({\n              message: \"Erro ao Salvar Produto\",\n              duration: 3000,\n              position: \"botton\"\n            })\n            .present();\n        });\n    } else {\n      this.toast\n        .create({\n          message: \"Insira um valor válido !\",\n          duration: 3000,\n          position: \"botton\"\n        })\n        .present();\n    }\n  }\n\n  private saveProduct() {\n    // ####################################################################################\n    // ## Atualizo a variavel do objeto Produto com o nome que o Usuário digitou no campo ####\n    this.model.nome = this.nomeProd;\n\n    // ## Atualizo o cache do Usuário com o novo produto\n    return this.storage.update(this.key, this.model);\n  }\n\n  // ## Método que destrói a modal\n  closeModal() {\n    this.view.dismiss();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/edit-product/edit-product.ts","import { Utilitarios } from \"./../../utilitarios/utilitarios\";\nimport { Component } from \"@angular/core\";\nimport {\n  IonicPage,\n  NavController,\n  NavParams,\n  ToastController,\n  Img\n} from \"ionic-angular\";\nimport { ModalController, ViewController } from \"ionic-angular\";\nimport { CompleteServiceProvider } from \"../../providers/complete-service/complete-service\";\nimport { ProductStorageProvider } from \"../../providers/product-storage/product-storage\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Produto } from \"../../model/Produto\";\nimport { CategoriaItem } from \"../../model/CategoriaItem\";\nimport { Usuario } from \"../../model/Usuario\";\n\n/**\n * Generated class for the ModalProductPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: \"page-modal-product\",\n  templateUrl: \"modal-product.html\"\n})\nexport class ModalProductPage {\n  // Objeto do tipo Produto\n  private model: Produto;\n\n  // Utilizado para fazer um grupo de formulários\n  public myForm: FormGroup;\n\n  // Array preenchido com as Unidades do produto\n  public arrUnidade: any;\n\n  // Array preenchido com os Tipos do produto\n  public arrTipo: any;\n\n  // Utilizado para indicar qual a classe deve ser usada no css indicando a Imagem de Fundo\n  private classCssImg: string;\n\n  // Utilizada para distinguir no cache a qual categoria os dados armazenados pertencem quando armazenada\n  private nomeCategoria: string;\n  private idCategoria: number;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public completeService: CompleteServiceProvider,\n    public storage: ProductStorageProvider,\n    public toast: ToastController,\n    public utilitarios: Utilitarios,\n    public view: ViewController\n  ) {\n    // Instancia do Produto e do Tipo Categoria Item do Objeto Produto\n    this.model = new Produto();\n    this.model.categoriaItem = new CategoriaItem();\n    this.model.usuario = new Usuario();\n\n    // ## Carrego o arrTipo e arrUnidade com os dados da classe utilitarios\n    this.arrTipo = this.utilitarios.getArrayTipo();\n    this.arrUnidade = this.utilitarios.getArrayUnidade();\n\n    // ## Pego os dados que são enviados da tela anterior e populo as variaveis\n    this.idCategoria = navParams.data[\"idCategoria\"];\n    this.nomeCategoria = navParams.data[\"nomeCategoria\"];\n    // O valor do objeto já setado com os valores das categorias\n    this.model.categoriaItem.idCategoria = this.idCategoria;\n    this.model.categoriaItem.nomeCategoria = this.nomeCategoria;\n\n    // ## setando o id do usuario logado na model produto\n    this.storage.get(\"Usuario\").then((ret) => {\n      this.model.usuario.idUsuario = ret['idUsuario'];\n    });\n\n    // ## Carrego o combo de Unidade como padrão KILO\n    this.model.unidade = \"KILO\";\n\n    // Verifico em qual tela esta sendo aberto a inclusao para indicar ao css qual imagem de fundo ele deve utilizar\n    if (this.nomeCategoria === \"Estoque\")\n      this.classCssImg = \"Estoque-Background\";\n    else if (this.nomeCategoria === \"Pedido\")\n      this.classCssImg = \"Pedido-Background\";\n  }\n\n  // ##################################################\n  // ## Método é chamado quando a View é carregada ##\n  ionViewDidLoad() {\n    // ## chamada do Método para troca a imagem de fundo do APP\n    this.changeBackground();\n  }\n\n  // ## Método para troca a imagem de fundo do APP\n  changeBackground() {\n    document.getElementById(\"content\").className = this.classCssImg;\n  }\n\n  // ## Método ativado quando a tela é aberta e carrega o formulário com as validações\n  ngOnInit(): void {\n    this.myForm = new FormGroup({\n      qtd: new FormControl(\"\", Validators.required), // Obriga o usuario a nao deixar o campo vazio\n      products: new FormControl(\"\", Validators.required),\n      und: new FormControl(\"\", Validators.required)\n    });\n  }\n\n  closeModal() {\n    this.view.dismiss();\n  }\n\n  // ##############################################################\n  // ## Método que chama a função que salva o produto no cache ####\n  save() {\n    // ## Verifico se o usuário digitou um valor válido\n    if (this.model.qtd > 0) {\n      this.insertProduct()\n        .then(ret => {\n          this.toast\n            .create({\n              message: \"Produto Salvo\",\n              duration: 2000,\n              position: \"botton\"\n            })\n            .present();\n          this.navCtrl.pop();\n        })\n        .catch(() => {\n          this.toast\n            .create({\n              message: \"Erro ao Salvar Produto\",\n              duration: 3000,\n              position: \"botton\"\n            })\n            .present();\n        });\n    } else {\n      this.toast\n        .create({\n          message: \"Insira um valor válido !\",\n          duration: 3000,\n          position: \"botton\"\n        })\n        .present();\n    }\n  }\n\n  // ## Função para inserir os produtos no CACHE do usuario\n  insertProduct() {\n    // ## Chamada da função para inserção\n    return this.storage.insert(this.model);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/modal-product/modal-product.ts","\nimport { Utilitarios } from './../utilitarios/utilitarios';\nimport { ProductStorageProvider } from \"./../providers/product-storage/product-storage\";\nimport { Component, ViewChild } from \"@angular/core\";\nimport { Platform, NavController, Nav } from \"ionic-angular\";\nimport { StatusBar } from \"@ionic-native/status-bar\";\nimport { SplashScreen } from \"@ionic-native/splash-screen\";\n\nimport { TabsPage } from \"../pages/tabs/tabs\";\nimport { LoginPage } from \"../pages/login/login\";\nimport { HomePage } from \"../pages/home/home\";\n\nimport { CheckNetworkProvider } from \"./../providers/check-network/check-network\";\nimport { TabStateProvider } from \"../providers/tab-state/tab-state\";\n\n@Component({\n  templateUrl: \"app.html\"\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n  pages: Array<{ title: string; component: any; openTab?: any }>;\n  //rootPage = '';\n  rootPage: any = LoginPage;\n  public navCtrl: NavController;\n\n  constructor(\n    public network: CheckNetworkProvider,\n    platform: Platform,\n    statusBar: StatusBar,\n    splashScreen: SplashScreen,\n    product: ProductStorageProvider,\n    public tabPage: TabStateProvider,\n\n  ) {\n    // ###########################################################################\n    // ## Todo novo menu que for adicionado deve ser colocado nesse array ###########\n    // ## utilizado no método openPage para nevageção no menu lateral ###############\n    this.pages = [{ title: \"Estoque / Pedido\", component: TabsPage }];\n\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n\n      //##########################################################################################\n      //## Quando o aplicativo é aberto, carrego os produtos do banco de dados no Cache do Usuario\n      //## sendo assim ele pode pesquisar prdutos offline ##########################################\n      product.insertDatabaseProducts();\n    });\n\n    this.network.checkNetwork();\n  }\n  //#################################################################\n  //## Método para redirecionar as páginas do Menu lateral ##########\n  openPage(page) {\n    this.nav.setRoot(page.component, { openTab: page.openTab });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\n\r\n@Component({\r\n  selector: 'page-contact',\r\n  templateUrl: 'contact.html'\r\n})\r\nexport class ContactPage {\r\n\r\n  constructor(public navCtrl: NavController) {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/contact.ts","import { CompleteServiceProvider } from \"./../../providers/complete-service/complete-service\";\r\nimport { ModalProductPage } from \"./../modal-product/modal-product\";\r\nimport { EditProductPage } from \"./../edit-product/edit-product\";\r\nimport {\r\n  ProductStorageProvider\r\n} from \"./../../providers/product-storage/product-storage\";\r\nimport { Component } from \"@angular/core\";\r\nimport {\r\n  NavController,\r\n  ToastController,\r\n  ModalController,\r\n  ViewController\r\n} from \"ionic-angular\";\r\nimport { ListaProduto } from \"../../model/ListaProduto\";\r\n\r\n@Component({\r\n  selector: \"page-home\",\r\n  templateUrl: \"home.html\"\r\n})\r\nexport class HomePage {\r\n  private arrProdutos: ListaProduto[];\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    public provider: ProductStorageProvider,\r\n    public toast: ToastController,\r\n    public modal: ModalController,\r\n    public completeService: CompleteServiceProvider,\r\n    public view: ViewController\r\n  ) {}\r\n\r\n/* ionViewDidLoad(){\r\n  this.provider.getAll()\r\n  .then((results)=>{\r\n    this.arrProdutos = results\r\n  })\r\n  .catch((error)=>{\r\n    console.log(error)\r\n  })\r\n\r\n  console.log(this.arrProdutos)\r\n} */\r\n\r\n  addProduct() {\r\n    const myModal = this.modal.create(ModalProductPage);\r\n\r\n/*     myModal.onDidDismiss(() => {\r\n      this.provider\r\n        .getAll()\r\n        .then(results => {\r\n          this.arrProdutos = results;\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    });*/\r\n    myModal.present();\r\n  }\r\n\r\n  editProduct(item: ListaProduto) {\r\n    this.navCtrl.push(EditProductPage, {\r\n      key: item.key,\r\n      produto: item.produto\r\n    });\r\n    console.log(item.produto)\r\n\r\n\r\n  }\r\n\r\n  removeProduct(item: ListaProduto) {\r\n    this.provider.remove(item.key).then(() => {\r\n      let index = this.arrProdutos.indexOf(item);\r\n      this.arrProdutos.splice(index, 1);\r\n      this.toast\r\n        .create({\r\n          message: \"Produto Removido\",\r\n          duration: 3000,\r\n          position: \"bottom\"\r\n        })\r\n        .present();\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","\r\nimport { ApiData } from \"./../../utilitarios/apiData\";\r\nimport { AutoCompleteService } from \"ionic2-auto-complete\";\r\nimport { Http } from \"@angular/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport \"rxjs/add/operator/map\";\r\nimport { map } from \"rxjs/operator/map\";\r\nimport { ProductStorageProvider } from \"../product-storage/product-storage\";\r\nimport { ListaProduto } from \"../../model/ListaProduto\";\r\n\r\n@Injectable()\r\nexport class CompleteServiceProvider extends ApiData\r\n  implements AutoCompleteService {\r\n  // ##############################################################################\r\n  // #### IMPORTANTE ##############################################################\r\n  // #### Variavel que indica qual será o campo de valor de retorno do formulario,\r\n  // #### NAME = (nome do campo no JSON)  #\r\n  // ###  Indica qual campo será usado para o filtro no JSON\r\n  labelAttribute = \"NAME\";\r\n  //###############################################################################\r\n  formValueAttribute = \"\";\r\n  constructor(public http: Http, public product: ProductStorageProvider) {\r\n    super();\r\n  }\r\n\r\n  // ## Função utilizada para auto complete nos formulários de pesquisa de Produto\r\n  getResults(keyword: string) {\r\n    let arrProdutos: ListaProduto[] = [];\r\n\r\n    //Pesquisa os dados do produto que está armazenado em cache\r\n    return this.product.get(\"ProductsDb\").then(v => {\r\n      return (arrProdutos = v.Produtos.filter(value => {\r\n        //  Filtra pelo NAME (nome do produto)\r\n        return value.NAME.toLowerCase().startsWith(keyword.toLowerCase());\r\n      }));\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/complete-service/complete-service.ts","import { Http } from \"@angular/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ApiData } from \"../../utilitarios/apiData\";\r\nimport { Produto } from \"../../model/Produto\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class ProductProvider extends ApiData {\r\n  constructor(public http: Http) {\r\n    super();\r\n  }\r\n\r\n  // ################################################\r\n  // ## Função que insere o Estoque no banco ########\r\n  insert(product: any) {\r\n    // Transformo o JSON em String para enviar na URL\r\n    let productData = JSON.stringify(product);\r\n\r\n    return this.http.post(\r\n      this.API_URL +\r\n        \"products/insertEstoque/\" +\r\n        encodeURIComponent(productData) +\r\n        \"\",\r\n      this.requestOptions\r\n    );\r\n  }\r\n\r\n  // ################################################\r\n  // ## Função que insere o Pedido no banco ########\r\n  insertRequest(product: any) {\r\n    // Transformo o JSON em String para enviar na URL\r\n    let productData = JSON.stringify(product);\r\n\r\n    return this.http.post(\r\n      this.API_URL +\r\n        \"products/insertPedido/\" +\r\n        encodeURIComponent(productData) +\r\n        \"\",\r\n      this.requestOptions\r\n    );\r\n  }\r\n\r\n  // #####################################################\r\n  // ## Resgato todos os produtos da tabela de Produtos\r\n  getAllProducts() {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.API_URL + \"products/getAll\").subscribe(ret => {\r\n        resolve(ret.json());\r\n      });\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/product/product.ts","import { ToastController } from \"ionic-angular\";\r\nexport class Utilitarios {\r\n  toast: ToastController;\r\n\r\n  // Array onde é armazenada as Unidades\r\n  // Utilizado para carregar combo box na tela de inserção de produto (modalProduct)\r\n  private arrUnidade = [\r\n    { und: \"KILO\", value: \"kg\" },\r\n    { und: \"BANDEJA\", value: \"bj\" },\r\n    { und: \"CAIXA\", value: \"cx\" },\r\n    { und: \"SACO\", value: \"sc\" }\r\n  ];\r\n\r\n  // Array onde é armazenada os Tipos de produto\r\n  private arrTipo = [\r\n    { tipo: \"FRUTA\", value: \"fr\" },\r\n    { tipo: \"LEGUME\", value: \"le\" },\r\n    { tipo: \"VERDURA\", value: \"ve\" }\r\n  ];\r\n\r\n  // ## Função que retorna o array de Unidade\r\n  public getArrayUnidade() {\r\n    return this.arrUnidade;\r\n  }\r\n\r\n  // ## Função que retorna o array de Tipo\r\n  public getArrayTipo() {\r\n    return this.arrTipo;\r\n  }\r\n\r\n  // ## Função para mostrar mensagens\r\n  public showToast(mensagem: string): void {\r\n    let toast = this.toast.create({ duration: 3000, position: \"botton\" });\r\n    toast.setMessage(mensagem);\r\n    toast.present();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilitarios/utilitarios.ts","import { CategoriaItem } from \"./CategoriaItem\";\n\nexport class Usuario {\n  idUsuario: number;\n  idUsuarioFb: string;\n  nomeUsuario: string;\n  email: string;\n  senha: string;\n  loja: number;\n  idCargo: number;\n  ativo: boolean;\n  apelidoUsuario:string;\n  categoriaItem:CategoriaItem\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/model/Usuario.ts","import { RequestPage } from \"./../request/request\";\nimport { MorePage } from \"./../more/more\";\nimport { Component, ViewChild, NgZone } from \"@angular/core\";\n\nimport { ContactPage } from \"../contact/contact\";\nimport { HomePage } from \"../home/home\";\nimport { StockPage } from \"../stock/stock\";\nimport { Nav, MenuController } from \"ionic-angular\";\nimport { TabStateProvider } from \"../../providers/tab-state/tab-state\";\n\n@Component({\n  templateUrl: \"tabs.html\"\n})\nexport class TabsPage {\n\n  //tabHome = HomePage;\n  tabEstoque = StockPage;\n  tabRequest = RequestPage;\n  tabMais = MorePage;\n\n  //tab3Root = ContactPage;\n\n  constructor( public tabState:TabStateProvider) {\n\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, NgZone } from \"@angular/core\";\r\n\r\n/*\r\n  Generated class for the TabStateProvider provider.\r\n\r\n  See https://angular.io/guide/dependency-injection for more info on providers\r\n  and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class TabStateProvider {\r\n  // ## Objeto para setar as abas\r\n  public states: {\r\n    [s: string]: any;\r\n  } = {};\r\n\r\n  constructor(public zone: NgZone) {}\r\n\r\n  // ###############################################\r\n  // ## Função que seta o estado da aba ############\r\n  setState(tab: string, enabled: boolean) {\r\n    this.zone.run(() => {\r\n      this.states[tab] = enabled;\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/tab-state/tab-state.ts","import { Rules } from \"./../../Rules/rules\";\nimport { Utilitarios } from \"./../../utilitarios/utilitarios\";\nimport { CategoriaItem } from \"./../../model/CategoriaItem\";\n\nimport { UserProvider } from \"./../../providers/user/user\";\nimport { ProductStorageProvider } from \"./../../providers/product-storage/product-storage\";\nimport { SignupPage } from \"./../signup/signup\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { TabsPage } from \"./../tabs/tabs\";\nimport { Component, ViewChild, Injectable } from \"@angular/core\";\nimport {\n  IonicPage,\n  NavController,\n  NavParams,\n  Form,\n  MenuController,\n  Menu,\n  ToastController,\n  ModalController\n} from \"ionic-angular\";\n\nimport { Usuario } from \"../../model/Usuario\";\n\n/**\n * Generated class for the LoginPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: \"page-login\",\n  templateUrl: \"login.html\"\n})\nexport class LoginPage {\n  // Variavel que indica qual campo do html possui esse id(\"usuario\")\n  @ViewChild(\"usuario\") userLogin;\n\n  // Variavel que indica qual campo do html possui esse id(\"senha\")\n  @ViewChild(\"senha\") password;\n\n  // Utilizada para montar o grupo de formulario\n  public formLogin: FormGroup;\n\n  // Objeto do tipo Usuario\n  public model: Usuario;\n\n  // Utilizada para distinguir no cache a qual categoria os dados armazenados pertencem quando armazenada\n  private nomeCategoria: string;\n  private idCategoria: number;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public menu: MenuController,\n    public toast: ToastController,\n    public modal: ModalController,\n    public storage: ProductStorageProvider,\n    public userApi: UserProvider,\n    public utilitarios: Utilitarios,\n    public rules: Rules\n  ) {\n    // #########################################\n    // ## Instâncio um novo objeto na memoria ##\n    this.model = new Usuario();\n    this.model.categoriaItem = new CategoriaItem();\n\n    // ## Desativo o menu lateral;\n    this.menu.enable(false);\n\n    // ##########################################################################################\n    // ## Preencho a variavel com o tipo de categoria correspondente ############################\n    this.nomeCategoria = this.rules[\"categorias\"][\"usuario\"][\"categoriaItem\"][\n      \"nomeCategoria\"\n    ];\n    this.idCategoria = this.rules[\"categorias\"][\"usuario\"][\"categoriaItem\"][\n      \"idCategoria\"\n    ];\n  }\n\n  // ##################################################################\n  // ## Quando iniciada a tela, carrego o formulário e suas validações\n  ngOnInit() {\n    this.formLogin = new FormGroup({\n      usuario: new FormControl(\"\", Validators.required), // Obriga o usuario a preencher o campo\n      senha: new FormControl(\"\", Validators.required)\n    });\n  }\n\n  // #######################################################################################\n  // ## Função utilizada para armazenar no cache todos os dados do Usuário que está logado\n  userData(ret: any) {\n    this.model.nomeUsuario = ret[0][\"nomeUsuario\"];\n    this.model.loja = ret[0][\"loja\"];\n    this.model.email = ret[0][\"email\"];\n    this.model.idCargo = ret[0][\"idCargo\"];\n    this.model.idUsuario = ret[0][\"idUsuario\"];\n    this.model.apelidoUsuario = ret[0][\"apelidoUsuario\"];\n    this.model.categoriaItem.idCategoria = this.idCategoria;\n    this.model.categoriaItem.nomeCategoria = this.nomeCategoria;\n\n    // ## Insere no storage/cache os dados armazenados na model (Usuario)\n    this.storage.insertUser(this.model);\n  }\n\n\n  login() {\n    return this.userApi\n      .loginAuthencation(this.userLogin.value, this.password.value)\n      .then(ret => {\n\n        // ## Se retornar vazio significa que o usuario não esta cadastrado\n        if (ret == \"\") {\n          this.showToast(\"Usuário Inválido\");\n        } else {\n\n          // ## Redireciono o Usuario para a tela inicial\n          this.navCtrl.push(TabsPage);\n\n          // ## Ativo o menu lateral\n          this.menu.enable(true);\n\n          // ## Carrego os dados do Usuario no cache\n          this.storage.insertUser(ret);\n        }\n      })\n      .catch(err => {\n        this.showToast(\"Não foi possivel acessar !\");\n      });\n  }\n\n  // ########################################################\n  // ## Função para mostrar Toast's ('mensagens')\n  private showToast(mensagem: string): void {\n    let toast = this.toast.create({ duration: 3000, position: \"botton\" });\n    toast.setMessage(mensagem);\n    toast.present();\n  }\n\n  // ########################################################\n  // ## Função para abrir a pagina de Cadastro de Usuário ###\n  openSignUp() {\n    // ## Crio uma modal como tela de cadastro\n    const myModal = this.modal.create(SignupPage);\n    myModal.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}